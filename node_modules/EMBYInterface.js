"use strict";
var sha1 = require('sha1');
var fs = require('fs');//filesystem
var request = require('request');
var WebSocketClient = require('websocket').client;
var EMBYInterface=function(authenticationParameters, embyClient){ //embyClient is an instance of the dune interface...but techincally could be any interface
    console.log(authenticationParameters);
    this.isRun=false;
    this.setClassVariables(authenticationParameters, embyClient);
}
EMBYInterface.prototype.setClassVariables=function(authenticationParameters, embyClient){
    this.embyClient=embyClient;
    this.host=authenticationParameters.Server.IP+":"+authenticationParameters.Server.PORT;
    this.hostM=this.host+"/mediabrowser";
    this.userId="";
    this.EMBYPassword=authenticationParameters.Server.PASSWORD;
    this.deviceId="77f6b3d2-3208-4e5d-a625-d20d3a97b2bb"; //emby variable
    this.client="Chromecast";//emby variable
    this.version="1.0.0.0";//emby variable
    this.device="DunePlayer"; //emby variable
}
EMBYInterface.prototype.isRunning=function(){
    return this.isRun;
}
EMBYInterface.prototype.testConnection=function(callback){
    request({
		url:"http://"+this.hostM+'/Users/public?format=json',
		method:'get',
		json:true
	}, function(err, res, body){
        if(err){
            callback(err);
        }
        else {
            callback("Success!");
        }
    });      
}
EMBYInterface.prototype.sendUpdate=function(position, typeProgress, itemId, header, hostM){
    //position=position*this.embyTime;
    //console.log(typeProgress);
    if(itemId){
       /* var typeProgress="Progress";
        if(isStopped){
            typeProgress="Stopped";
        }*/
        var url="";
        if(typeProgress){
            url="http://"+hostM+"/Sessions/Playing/"+typeProgress+"?format=json";
        }
        else {
            url="http://"+hostM+"/Sessions/Playing?format=json";
        }
        //console.log(url);
        var content={"itemId":itemId, "canSeek":true, "MediaSourceId":itemId, "PositionTicks":position};
        //console.log(content);
        request({
            url:url,
            method:'post',
            json:content,
            headers:header,
        }, function(err, res, body){
        });
    }
}
EMBYInterface.prototype.setClient=function(embyClient){
    this.embyClient=embyClient;
}
EMBYInterface.prototype.setAuthentication=function(authenticationParameters){
    this.setClassVariables(authenticationParameters, this.embyClient);
}
EMBYInterface.prototype.launch=function(callback){
    var self=this;
    self.successCallBack=callback;
    if(!this.embyClient){
        return "Must include an Emby Client!";
    }
    self.isRun=true;
    request({
		url:"http://"+self.hostM+'/Users/public?format=json',
		method:'get',
		json:true
	}, function(err, res, body){
        self.getUserIDs(body);
    });
}
EMBYInterface.prototype.getUserIDs=function(body){
    this.userId=body[0].Id;
    this.header={"Authorization":'MediaBrowser UserId="'+this.userId+'", Client="'+this.client+'", Device="'+this.device+'", DeviceId="'+this.deviceId+'", Version="'+this.version+'"', "content-type": "application/json"};
    var defaultName=body[0].Name;
    this.authenticate(defaultName, this.userId);
}
EMBYInterface.prototype.authenticate=function(name){
    var self=this;
	var content={username:name, password:sha1(self.EMBYPassword)};
	var url="http://"+self.hostM+"/Users/AuthenticateByName?format=json";
	request({
		url:url,
		method:'post',
		json:content,
		headers:self.header,
	}, function(err, res, body){self.getAccessToken(err, res, body);});

}

EMBYInterface.prototype.getAccessToken=function(err, res, body){ //retreives access token and gets session attributes
    var self=this;
	var accessToken=body.AccessToken; //used to be res.body
	var url="http://"+self.hostM+"/Sessions?DeviceId=" + self.deviceId + "&format=json";
	//var header=getHeader(userId);
	self.header["X-MediaBrowser-Token"]=accessToken;
	request({
		url:url,
		method:'get',
		headers:self.header,
		json:true
	}, function(err, res, body){self.clientInterface(err, res, body, accessToken);});

}
EMBYInterface.prototype.setSession=function(accessToken){
		//var header=getHeader(userId);
        var self=this;
		this.header["X-MediaBrowser-Token"]=accessToken;
		var url = "http://"+self.hostM+"/Sessions/Capabilities/Full";//?format=json";
		var supportedCommands="Play,Playstate,SendString,DisplayMessage,PlayNext";
		var playableMediaTypes = "Audio,Video";
		var content={
			"PlayableMediaTypes":playableMediaTypes,
			"SupportedCommands": supportedCommands,
			"SupportsMediaControl":true
		};
		request({
			url:url,
			method:'post',
			json: content,
			headers:self.header
		}, function(err, res, body){
            if(!err){
                self.successCallBack("Success");
            }
            else {
                self.successCallBack(err);
            }
        });
}

EMBYInterface.prototype.handleServerMessage=function(message, accessToken){
    var self=this;
    switch(message.MessageType){
        case 'Play':
            if(message.Data.PlayCommand==='PlayNow'){
                self.embyClient.playMedia(message.Data, function(itemId, userId, callback){return self.getDetailedItemInfo(itemId, userId, accessToken, callback);}, function(position, isStopped, itemId){self.sendUpdate(position, isStopped, itemId, self.header, self.hostM);}); //may have to wrap sendUpdate...
            }
            break;
        case 'Playstate':
            switch(message.Data.Command){
                case 'Stop':
                    self.embyClient.stop();
                    break;
                case 'NextTrack':
                    self.embyClient.next();
                    break;
                case 'PreviousTrack':
                    self.embyClient.prev();
                    break;
                case 'Pause':
                    self.embyClient.pause();
                    break;
                    
            }
            break;
    }
}

EMBYInterface.prototype.getDetailedItemInfo=function(itemId, userId, accessToken, callback){
    //var host=ip+":"+port;
    var url="http://"+this.hostM+"/Items?Ids="+itemId+"&Fields=path&format=json"; //just to see what kind of file it is (video or music)
    //var header=getHeader(userId);
    this.header["X-MediaBrowser-Token"]=accessToken;
    request({
        url:url, 
        method:'get',
        json:true,
        headers:this.header}, callback);
}


EMBYInterface.prototype.clientInterface=function(err, res, body, accessToken){
    var client=new WebSocketClient();
    var self=this;
    client.on('connectFailed', function(error){
        console.log("First error: "+error);
    });
    client.on('connect', function(connection){
        self.setSession(accessToken);
        connection.on('error', function(error){
            console.log(error);
        }); 
        connection.on('close', function(){
            console.log('closed');
        });
        connection.on('message', function(message){
            message=JSON.parse(message.utf8Data);
            self.handleServerMessage(message, accessToken);
           
        });
    });
    client.connect("ws://"+self.hostM+"?api_key="+accessToken+"&deviceId="+self.deviceId, null);
}

module.exports=EMBYInterface;